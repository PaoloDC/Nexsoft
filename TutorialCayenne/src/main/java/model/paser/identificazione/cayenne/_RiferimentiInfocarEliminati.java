package model.paser.identificazione.cayenne;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import model.paser.identificazione.custom.Base;

/**
 * Class _RiferimentiInfocarEliminati was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _RiferimentiInfocarEliminati extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ANNOXX_PK_COLUMN = "ANNOXX";
    public static final String CODALL_PK_COLUMN = "CODALL";
    public static final String MESEXX_PK_COLUMN = "MESEXX";

    public static final Property<String> DESALL = Property.create("desall", String.class);
    public static final Property<String> DESMAR = Property.create("desmar", String.class);
    public static final Property<String> DESMOD = Property.create("desmod", String.class);
    public static final Property<Base> BASE = Property.create("base", Base.class);
    public static final Property<Base> BASE1 = Property.create("base1", Base.class);
    public static final Property<Base> BASE2 = Property.create("base2", Base.class);

    public void setDesall(String desall) {
        writeProperty("desall", desall);
    }
    public String getDesall() {
        return (String)readProperty("desall");
    }

    public void setDesmar(String desmar) {
        writeProperty("desmar", desmar);
    }
    public String getDesmar() {
        return (String)readProperty("desmar");
    }

    public void setDesmod(String desmod) {
        writeProperty("desmod", desmod);
    }
    public String getDesmod() {
        return (String)readProperty("desmod");
    }

    public void setBase(Base base) {
        setToOneTarget("base", base, true);
    }

    public Base getBase() {
        return (Base)readProperty("base");
    }


    public void setBase1(Base base1) {
        setToOneTarget("base1", base1, true);
    }

    public Base getBase1() {
        return (Base)readProperty("base1");
    }


    public void setBase2(Base base2) {
        setToOneTarget("base2", base2, true);
    }

    public Base getBase2() {
        return (Base)readProperty("base2");
    }


}
