package model.paser.usato.cayenne;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import model.paser.identificazione.custom.Base;

/**
 * Class _CrossRcl was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _CrossRcl extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ANNOXX_PK_COLUMN = "ANNOXX";
    public static final String CODALL_PK_COLUMN = "CODALL";
    public static final String MESEXX_PK_COLUMN = "MESEXX";

    public static final Property<Integer> CODRCL = Property.create("codrcl", Integer.class);
    public static final Property<Integer> PRGRCL = Property.create("prgrcl", Integer.class);
    public static final Property<Base> BASE = Property.create("base", Base.class);
    public static final Property<Base> BASE1 = Property.create("base1", Base.class);
    public static final Property<Base> BASE2 = Property.create("base2", Base.class);

    public void setCodrcl(int codrcl) {
        writeProperty("codrcl", codrcl);
    }
    public int getCodrcl() {
        Object value = readProperty("codrcl");
        return (value != null) ? (Integer) value : 0;
    }

    public void setPrgrcl(int prgrcl) {
        writeProperty("prgrcl", prgrcl);
    }
    public int getPrgrcl() {
        Object value = readProperty("prgrcl");
        return (value != null) ? (Integer) value : 0;
    }

    public void setBase(Base base) {
        setToOneTarget("base", base, true);
    }

    public Base getBase() {
        return (Base)readProperty("base");
    }


    public void setBase1(Base base1) {
        setToOneTarget("base1", base1, true);
    }

    public Base getBase1() {
        return (Base)readProperty("base1");
    }


    public void setBase2(Base base2) {
        setToOneTarget("base2", base2, true);
    }

    public Base getBase2() {
        return (Base)readProperty("base2");
    }


}
